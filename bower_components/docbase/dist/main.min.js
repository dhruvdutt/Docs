!function(t,e){function n(t){return e.isString(t)?(t="/"===t.charAt(0)?t.substring(1):t,i(t,"/")?t.substring(0,t.length-1):t):t}function r(t){return schema({"*":Array.of(schema({name:String,label:String}))})(t)}function o(e,n){var r=e.path,o=r.split("/"),a=o.splice(o.length-1,1);o.join("/"),a=a[0];var l="https://api.github.com/repos/"+e.user+"/"+e.repo+"/",c=l+"contents/"+o;t.get(c,{ref:e.branch}).success(function(e){var r=e.filter(function(t){return t.name===a})[0].sha;t.get(l+"git/trees/"+r+"?recursive=1").success(function(t){t=t.tree.filter(function(t){return i(t.path,".md")});var e={};t.forEach(function(t){var n=t.path.split("/");if(n.length>=3){var r=n[0],o=n[1],i=n[2].substring(0,n[2].length-3);e[r]||(e[r]=[]),e[r].filter(function(t){return t.name===o}).length||e[r].push({label:o,name:o,files:[]}),e[r].forEach(function(t){t.name===o&&t.files.push({name:i,label:i})})}}),n(null,e)}).error(function(t){n(t)})}).error(function(t){n(t)})}function i(t,e,n){(void 0===n||n>t.length)&&(n=t.length),n-=e.length;var r=t.indexOf(e,n);return-1!==r&&r===n}var a,l=t(window),c=this,s=c.Docbase={},u=s.events={},f=s.route={};s.methods=["file","github","generic"],s.run=function(r){var o={method:"github",map:{file:"map.json",path:""},file:{path:"docs"},github:{path:"/",branch:"gh-pages",editGithubBtn:!0},generic:{baseurl:"",path:"/"},html5mode:!1,indexType:"html",indexSrc:"v1/path/index.md",indexHtml:"html/main.html",flatdocHtml:"html/flatdoc.html",angularAppName:"docbaseApp"};if(r=t.extend({},o,r),!("github"!==r.method||r.github.user&&r.github.repo))throw"Missing GitHub user/repo info.";s.methods.forEach(function(t){var e=r[t];Object.keys(e).forEach(function(t){e[t]=n(e[t])})}),r.map.path=n(r.map.path),s.options=r,u.bind(),a=e.module(r.angularAppName,["ngRoute"]).factory("FlatdocService",["$q","$route","$location","$anchorScroll","$http",f.fetch]).controller("URLCtrl",["$scope","$location","$filter","data","commits",f.URLCtrl]).controller("MainCtrl",["$scope","$location","$timeout",f.mainCtrl]).config(["$routeProvider","$locationProvider",f.config]).run(["$rootScope","$location","$routeParams","$anchorScroll","$route",f.anchorConfig]),"file"===r.method?s.file(r.map):"github"===r.method?s.github(r.github):s.file(r.map)},s.github=function(e){o(e,function(e,n){if(e)s.file(s.options.map);else{if(!r(n))throw"GitHub tree mapping error.";s.map=n,t.get(s.options.map.path+"/"+s.options.map.file).success(function(t){var e=s.map,n=Object.keys(t);n.forEach(function(n){e[n]&&e[n].forEach(function(e){var r=t[n].filter(function(t){return t.name===e.name})[0];r&&r.label&&(e.label=r.label,e.files.forEach(function(t){var e=r.files.filter(function(e){return e.name===t.name})[0];e&&e.label&&(t.label=e.label)}))})}),l.trigger("mapped"),u.bind()}).error(function(){l.trigger("mapped"),u.bind()})}})},s.file=s.generic=function(e){t.get(e.path+"/"+e.file).success(function(t){if(!r(t))throw"Map file schema error. Check the documentation.";var e=Object.keys(t);if(!(e.length&&t[e[0]][0].files.length&&t[e[0]][0].files[0].name))throw"Map does not have a file entry. Check the documentation";s.map=t,l.trigger("mapped"),u.bind()}).error(function(t){throw t})},u.switchBind=function(t){l[t]("flatdoc:ready",u.ready),l[t]("ajaxError",u.ajaxError)},u.bind=function(){u.switchBind("on")},u.unbind=function(){u.switchBind("off")},u.ready=function(){l.trigger("docbase:ready")},u.ajaxError=function(t,e){403===e.status&&"github"===s.options.method&&console.error("Github API quota exceeded.")},f.config=function(t,e){var n=s.options.flatdocHtml,r=s.options.indexHtml,o={data:function(t){return t.getData().then(function(t){return t})},commits:function(t){return t.getCommits()}};t.when("/:version/:folder/:file",{templateUrl:n,controller:"URLCtrl",resolve:o}).when("/:version/:folder",{templateUrl:n,controller:"URLCtrl",resolve:o}).when("/:version",{templateUrl:n,controller:"URLCtrl",resolve:o}).when("/",{templateUrl:r,controller:"MainCtrl"}).otherwise({redirectTo:"/"}),e.html5Mode(s.options.html5mode)},f.anchorConfig=function(e,n,r,o,i){e.$on("$locationChangeStart",function(t,r,a){var l=r.split("#"),c=l[l.length-1];l.splice(l.length-1,1),l=l.join("#");var s=a.split("#");if(s.splice(2===s.length?2:s.length-1,1),s=s.join("#"),l===s&&r!==a){n.hash(c);var u=i.current,f=e.$on("$locationChangeSuccess",function(){i.current=u,f()});o()}}),e.$on("$routeChangeSuccess",function(){l.on("docbase:ready",function(){o(),t(".content").find("pre code").each(function(){t(this).addClass("prettyprint")}),prettyPrint()})})},f.fetch=function(e,n,r,o,i){function a(){function r(){var e=s.map,r={},i=n.current.params.version,a=Object.keys(e),l=f.updatePath(n.current.params);if(r.versions=a,r.currentVersion=i||a[a.length-1],r.map=e,r.locationPath=l.path,l.fail)r.github=!1,o.resolve(r);else{var c=s.options,h=s.options.github,p="https://github.com/"+h.user+"/"+h.repo+"/tree/"+h.branch+"/"+h.path+l.path+".md",d=c.file.path+l.path+".md";"github"===c.method?d="https://raw.githubusercontent.com/"+h.user+"/"+h.repo+"/"+h.branch+"/"+h.path+l.path+".md":"generic"===c.method&&(d=c.generic.baseurl+"/"+c.generic.path+l.path+".md"),r.github=p,u.parsed=!1,console.log(d),Flatdoc.file(d)(function(e,n){n=n.split("\n");var i=n.shift();i=i.replace(/\u201D/g,'"'),i=i.replace(/\u201C/g,'"');try{i=JSON.parse(i)}catch(a){n.unshift(i),i={threeColumns:!1}}n=n.join("\n"),i.threeColumns?t("body").removeClass("no-literate"):t("body").addClass("no-literate"),i.bigh3?t("body").addClass("big-h3"):t("body").removeClass("big-h3"),i.largeBrief?t("body").addClass("large-brief"):t("body").removeClass("large-brief");var l=Flatdoc.parser.parse(n,function(t){return Flatdoc.highlighters.generic(t)});r.markdown=l,o.resolve(r)})}}{var o=e.defer();s.options}return s.map?r():l.on("mapped",r),o.promise}return{getData:function(){return new a},getCommits:function(){var t=s.options,e=n.current.params,r=t.github.path+"/"+e.version+"/"+e.folder+"/"+e.file;return i.get("https://api.github.com/repos/"+t.github.user+"/"+t.github.repo+"/commits?path="+r+".md")}}},f.URLCtrl=function(e,n,r,o,i){if(n.path(o.locationPath),!o.fail){e.versions=o.versions,e.currentVersion=o.currentVersion,e.map=o.map,e.github=o.github;var a=o.markdown,c=[];t('[role="flatdoc-content"]').html(a.content.find(">*")),t('[role="flatdoc-menu"]').html(Flatdoc.menuView(a.menu)),l.trigger("flatdoc:ready")}var s=t("<div>").addClass("extra_container");if(200==i.status){for(var u=i.data,f=r("date")(i.data[0].commit.committer.date,"mediumDate"),h=t("<span>").addClass("pull-right modified-date").html('Last Modified On : <a href="'+i.data[0].html_url+'">'+f+"</a>"),p=u,d=t("<div>").addClass("contributor-container"),m=0;m<p.length;m++){var g=p[m].committer;if(-1==jQuery.inArray(g.login,c)){c.push(g.login);var b=t("<img>").addClass("contributor_img img-rounded").attr({src:g.avatar_url,alt:g.login}),v=t("<a>").addClass("contributor").attr({href:g.html_url,title:g.login,target:"_blank"}).append(b);d.append(v)}}var y=t("<div>").addClass("contributors_header").append("Contributors").append(h);t(s).prepend(d).prepend(y)}var C=t("<div>").addClass("clearFix");t('[role="flatdoc-content"]').prepend(C).prepend(s)},f.mainCtrl=function(t,e,n){if("markdown"===s.options.indexType){var r=s.options.indexSrc;i(r,".md")&&(r=r.substring(0,r.length-3)),"/"!==r.charAt(0)&&(r="/"+r),e.path(r)}else{var o=function(){n(function(){t.map=s.map,t.versions=Object.keys(t.map),t.currentVersion=t.versions[0]})};s.map?o():l.on("mapped",o)}},f.updatePath=function(t){var e=s.map,n=t.version,r=t.folder,o=t.file;if(!e[n])return console.error("Version not mapped."),{path:"/",fail:!0};var i;if(r&&(i=e[n].filter(function(t){return t.name===r}),!i.length))return console.error("Folder not mapped."),{path:"/"+n,fail:!0};if(o){var a=i[0].files.filter(function(t){return t.name===o});if(!a.length)return console.error("File not mapped."),{path:"/"+n+"/"+o,fail:!0}}r=r||e[n][0].name;var l=e[n].filter(function(t){return t.name===r})[0];o=o||l.files&&l.files[0].name;var c="/"+n+"/"+r+"/"+o;return"undefined"==typeof o&&(c="/"+n+"/"+r),{path:c,fail:!1}}}(window.jQuery,window.angular),!function(t,e){function n(t){return e.isString(t)?(t="/"===t.charAt(0)?t.substring(1):t,i(t,"/")?t.substring(0,t.length-1):t):t}function r(t){return schema({"*":Array.of(schema({name:String,label:String}))})(t)}function o(e,n){var r=e.path,o=r.split("/"),a=o.splice(o.length-1,1);o.join("/"),a=a[0];var l="https://api.github.com/repos/"+e.user+"/"+e.repo+"/",c=l+"contents/"+o;t.get(c,{ref:e.branch}).success(function(e){var r=e.filter(function(t){return t.name===a})[0].sha;t.get(l+"git/trees/"+r+"?recursive=1").success(function(t){t=t.tree.filter(function(t){return i(t.path,".md")});var e={};t.forEach(function(t){var n=t.path.split("/");if(n.length>=3){var r=n[0],o=n[1],i=n[2].substring(0,n[2].length-3);e[r]||(e[r]=[]),e[r].filter(function(t){return t.name===o}).length||e[r].push({label:o,name:o,files:[]}),e[r].forEach(function(t){t.name===o&&t.files.push({name:i,label:i})})}}),n(null,e)}).error(function(t){n(t)})}).error(function(t){n(t)})}function i(t,e,n){(void 0===n||n>t.length)&&(n=t.length),n-=e.length;var r=t.indexOf(e,n);return-1!==r&&r===n}var a,l=t(window),c=this,s=c.Docbase={},u=s.events={},f=s.route={};s.methods=["file","github","generic"],s.run=function(r){var o={method:"github",map:{file:"map.json",path:""},file:{path:"docs"},github:{path:"/",branch:"gh-pages",editGithubBtn:!0},generic:{baseurl:"",path:"/"},html5mode:!1,indexType:"html",indexSrc:"v1/path/index.md",indexHtml:"html/main.html",flatdocHtml:"html/flatdoc.html",angularAppName:"docbaseApp"};if(r=t.extend({},o,r),!("github"!==r.method||r.github.user&&r.github.repo))throw"Missing GitHub user/repo info.";s.methods.forEach(function(t){var e=r[t];Object.keys(e).forEach(function(t){e[t]=n(e[t])})}),r.map.path=n(r.map.path),s.options=r,u.bind(),a=e.module(r.angularAppName,["ngRoute"]).factory("FlatdocService",["$q","$route","$location","$anchorScroll","$http",f.fetch]).controller("URLCtrl",["$scope","$location","$filter","data","commits",f.URLCtrl]).controller("MainCtrl",["$scope","$location","$timeout",f.mainCtrl]).config(["$routeProvider","$locationProvider",f.config]).run(["$rootScope","$location","$routeParams","$anchorScroll","$route",f.anchorConfig]),"file"===r.method?s.file(r.map):"github"===r.method?s.github(r.github):s.file(r.map)},s.github=function(e){o(e,function(e,n){if(e)s.file(s.options.map);else{if(!r(n))throw"GitHub tree mapping error.";s.map=n,t.get(s.options.map.path+"/"+s.options.map.file).success(function(t){var e=s.map,n=Object.keys(t);n.forEach(function(n){e[n]&&e[n].forEach(function(e){var r=t[n].filter(function(t){return t.name===e.name})[0];r&&r.label&&(e.label=r.label,e.files.forEach(function(t){var e=r.files.filter(function(e){return e.name===t.name})[0];e&&e.label&&(t.label=e.label)}))})}),l.trigger("mapped"),u.bind()}).error(function(){l.trigger("mapped"),u.bind()})}})},s.file=s.generic=function(e){t.get(e.path+"/"+e.file).success(function(t){if(!r(t))throw"Map file schema error. Check the documentation.";var e=Object.keys(t);if(!(e.length&&t[e[0]][0].files.length&&t[e[0]][0].files[0].name))throw"Map does not have a file entry. Check the documentation";s.map=t,l.trigger("mapped"),u.bind()}).error(function(t){throw t})},u.switchBind=function(t){l[t]("flatdoc:ready",u.ready),l[t]("ajaxError",u.ajaxError)},u.bind=function(){u.switchBind("on")},u.unbind=function(){u.switchBind("off")},u.ready=function(){l.trigger("docbase:ready")},u.ajaxError=function(t,e){403===e.status&&"github"===s.options.method&&console.error("Github API quota exceeded.")},f.config=function(t,e){var n=s.options.flatdocHtml,r=s.options.indexHtml,o={data:function(t){return t.getData().then(function(t){return t})},commits:function(t){return t.getCommits()}};t.when("/:version/:folder/:file",{templateUrl:n,controller:"URLCtrl",resolve:o}).when("/:version/:folder",{templateUrl:n,controller:"URLCtrl",resolve:o}).when("/:version",{templateUrl:n,controller:"URLCtrl",resolve:o}).when("/",{templateUrl:r,controller:"MainCtrl"}).otherwise({redirectTo:"/"}),e.html5Mode(s.options.html5mode)},f.anchorConfig=function(e,n,r,o,i){e.$on("$locationChangeStart",function(t,r,a){var l=r.split("#"),c=l[l.length-1];l.splice(l.length-1,1),l=l.join("#");var s=a.split("#");if(s.splice(2===s.length?2:s.length-1,1),s=s.join("#"),l===s&&r!==a){n.hash(c);var u=i.current,f=e.$on("$locationChangeSuccess",function(){i.current=u,f()});o()}}),e.$on("$routeChangeSuccess",function(){l.on("docbase:ready",function(){o(),t(".content").find("pre code").each(function(){t(this).addClass("prettyprint")}),prettyPrint()})})},f.fetch=function(e,n,r,o,i){function a(){function r(){var e=s.map,r={},i=n.current.params.version,a=Object.keys(e),l=f.updatePath(n.current.params);if(r.versions=a,r.currentVersion=i||a[a.length-1],r.map=e,r.locationPath=l.path,l.fail)r.github=!1,o.resolve(r);else{var c=s.options,h=s.options.github,p="https://github.com/"+h.user+"/"+h.repo+"/tree/"+h.branch+"/"+h.path+l.path+".md",d=c.file.path+l.path+".md";"github"===c.method?d="https://raw.githubusercontent.com/"+h.user+"/"+h.repo+"/"+h.branch+"/"+h.path+l.path+".md":"generic"===c.method&&(d=c.generic.baseurl+"/"+c.generic.path+l.path+".md"),r.github=p,u.parsed=!1,console.log(d),Flatdoc.file(d)(function(e,n){n=n.split("\n");var i=n.shift();i=i.replace(/\u201D/g,'"'),i=i.replace(/\u201C/g,'"');try{i=JSON.parse(i)}catch(a){n.unshift(i),i={threeColumns:!1}}n=n.join("\n"),i.threeColumns?t("body").removeClass("no-literate"):t("body").addClass("no-literate"),i.bigh3?t("body").addClass("big-h3"):t("body").removeClass("big-h3"),i.largeBrief?t("body").addClass("large-brief"):t("body").removeClass("large-brief");var l=Flatdoc.parser.parse(n,function(t){return Flatdoc.highlighters.generic(t)});r.markdown=l,o.resolve(r)})}}var o=e.defer();return s.options,s.map?r():l.on("mapped",r),o.promise}return{getData:function(){return new a},getCommits:function(){var t=s.options,e=n.current.params,r=t.github.path+"/"+e.version+"/"+e.folder+"/"+e.file;return i.get("https://api.github.com/repos/"+t.github.user+"/"+t.github.repo+"/commits?path="+r+".md")}}},f.URLCtrl=function(e,n,r,o,i){if(n.path(o.locationPath),!o.fail){e.versions=o.versions,e.currentVersion=o.currentVersion,e.map=o.map,e.github=o.github;var a=o.markdown,c=[];t('[role="flatdoc-content"]').html(a.content.find(">*")),t('[role="flatdoc-menu"]').html(Flatdoc.menuView(a.menu)),l.trigger("flatdoc:ready")}var s=t("<div>").addClass("extra_container");if(200==i.status){for(var u=i.data,f=r("date")(i.data[0].commit.committer.date,"mediumDate"),h=t("<span>").addClass("pull-right modified-date").html('Last Modified On : <a href="'+i.data[0].html_url+'">'+f+"</a>"),p=u,d=t("<div>").addClass("contributor-container"),m=0;m<p.length;m++){var g=p[m].committer;if(-1==jQuery.inArray(g.login,c)){c.push(g.login);var b=t("<img>").addClass("contributor_img img-rounded").attr({src:g.avatar_url,alt:g.login}),v=t("<a>").addClass("contributor").attr({href:g.html_url,title:g.login,target:"_blank"}).append(b);d.append(v)}}var y=t("<div>").addClass("contributors_header").append("Contributors").append(h);t(s).prepend(d).prepend(y)}var C=t("<div>").addClass("clearFix");t('[role="flatdoc-content"]').prepend(C).prepend(s)},f.mainCtrl=function(t,e,n){if("markdown"===s.options.indexType){var r=s.options.indexSrc;i(r,".md")&&(r=r.substring(0,r.length-3)),"/"!==r.charAt(0)&&(r="/"+r),e.path(r)}else{var o=function(){n(function(){t.map=s.map,t.versions=Object.keys(t.map),t.currentVersion=t.versions[0]})};s.map?o():l.on("mapped",o)}},f.updatePath=function(t){var e=s.map,n=t.version,r=t.folder,o=t.file;if(!e[n])return console.error("Version not mapped."),{path:"/",fail:!0};var i;if(r&&(i=e[n].filter(function(t){return t.name===r}),!i.length))return console.error("Folder not mapped."),{path:"/"+n,fail:!0};if(o){var a=i[0].files.filter(function(t){return t.name===o});if(!a.length)return console.error("File not mapped."),{path:"/"+n+"/"+o,fail:!0}}r=r||e[n][0].name;var l=e[n].filter(function(t){return t.name===r})[0];o=o||l.files&&l.files[0].name;var c="/"+n+"/"+r+"/"+o;return"undefined"==typeof o&&(c="/"+n+"/"+r),{path:c,fail:!1}}}(window.jQuery,window.angular),function(t){function e(){t("h2, h3").scrollagent({offset:100},function(e,n){n&&t("[pref='#"+n+"']").removeClass("active"),e&&t("[pref='#"+e+"']").addClass("active")}),t(".menu a").each(function(){var e=t(this),n=e.attr("href");if(n&&!e.attr("pref")){var r=window.location.href.split("#");r.length<=2?r=r.join("#")+n:(r[r.length-1]=n.substring(1),r=r.join("#")),e.attr("href",r),e.attr("pref",n)}});var e,r=t(".menubar");n.on("resize.sidestick",function(){r.removeClass("fixed"),e=r.offset().top,n.trigger("scroll.sidestick")}).on("scroll.sidestick",function(){var t=n.scrollTop();r.toggleClass("fixed",t>=e-35)}).trigger("resize.sidestick")}{var n=t(window);t(document)}n.on("docbase:ready",e)}(window.jQuery),function(t){t.fn.scrollagent=function(e,n){function r(){u=l.height(),f=t(document).height()}function o(){var e=l.scrollTop();e+=u*(.3+.7*Math.pow(e/f,2));var r=null;for(var o in c)if(c.hasOwnProperty(o)){var i=c[o];t(i.el).offset().top+i.offset<e&&(r=i)}!r||s&&r.index===s.index||(n.call(a,r?r.id:null,s?s.id:null,r?r.el:null,s?s.el:null),s=r)}var i=t(window);"undefined"==typeof n&&(n=e,e={});var a=t(this),l=e.parent||t(window),c=[];a.each(function(n){var r=t(this).attr("data-anchor-offset")?parseInt(t(this).attr("data-anchor-offset"),10):e.offset||0;c.push({id:t(this).attr("id"),index:n,el:this,offset:r})});var s=null,u=null,f=null;return i.on("scroll",t.throttle(50,o)),i.on("resize",t.throttle(250,r)),r(),o(),this}}(jQuery),function(t,e){var n,r=t.jQuery||t.Cowboy||(t.Cowboy={});r.throttle=n=function(t,n,o,i){function a(){function r(){c=+new Date,o.apply(s,f)}function a(){l=e}var s=this,u=+new Date-c,f=arguments;i&&!l&&r(),l&&clearTimeout(l),i===e&&u>t?r():n!==!0&&(l=setTimeout(i?a:r,i===e?t-u:t))}var l,c=0;return"boolean"!=typeof n&&(i=o,o=n,n=e),r.guid&&(a.guid=o.guid=o.guid||r.guid++),a},r.debounce=function(t,r,o){return o===e?n(t,r,!1):n(t,o,r!==!1)}}(this),Function.prototype.bind||(Function.prototype.bind=function(t){var e=[].slice,n=function(){},r=this;if("function"!=typeof r)throw new TypeError("Function.prototype.bind called on incompatible "+r);var o=e.call(arguments,1),i=function(){if(this instanceof i){var n=r.apply(this,o.concat(e.call(arguments)));return Object(n)===n?n:this}return r.apply(t,o.concat(e.call(arguments)))};return r.prototype&&(n.prototype=r.prototype,i.prototype=new n,n.prototype=null),i});